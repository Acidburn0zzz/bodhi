# $Id: app.cfg,v 1.6 2007/01/06 08:03:21 lmacken Exp $
# The settings in this file should not vary depending on the deployment
# environment. dev.cfg and prod.cfg are the locations for
# the different deployment settings. Settings in this file will
# be overridden by settings in those other files.

##
## Note:  Release settings can be found in init.py
##

[global]

##
## Mash settings
##

# The masher is a bodhi instance that is responsible for composing the update
# repositories, regenerating metrics, sending update notices, closing bugs,
# and other costly operations.  To set an external masher, set the masher to
# the baseurl of the bodhi instance.  If set to None, this bodhi instance
# will act as a masher as well.
#masher = None

# Where to initially mash repositories
mashed_dir = '%(top_level_dir)s/../mashed'

# Where to move the verified composed repos after they are mashed
mashed_stage_dir = '%(top_level_dir)s/../mash/updates'

mash_conf = '%(top_level_dir)s/config/mash.conf'

createrepo_cache_dir = "/var/tmp/createrepo"

## Our periodic jobs
#jobs = 'clean_repo nagmail fix_bug_titles cache_release_data'
jobs = 'cache_release_data refresh_metrics'

## Comps configuration
comps_dir = '/usr/share/bodhi/comps'
comps_cvs = ':pserver:anonymous@cvs.fedora.redhat.com:/cvs/pkgs'

##
## Mirror settings
##
file_url = 'http://download.fedoraproject.org/pub/fedora/linux/updates'
master_repomd = 'http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386/repodata/repomd.xml'
master_newkey_repomd = 'http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386.newkey/repodata/repomd.xml'

fedora_master_repomd = 'http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386/repodata/repomd.xml'
fedora_epel_master_repomd = 'http://download.fedora.redhat.com/pub/epel/%d/i386/repodata/repomd.xml'

## The base url of this application (should not include server.webpath)
base_address = 'http://localhost:8084'

## Supported update types
update_types = 'bugfix enhancement security newpackage'

## Supported architechures
arches = 'i386 x86_64 ppc'

##
## Contact setting
##

# The updates system itself.  This email address is used in fetching Bugzilla
# information, as well as email notifications
bodhi_email = None
bodhi_password=None

# The address that gets the requests
release_team_address = None

# The address to notify when security updates are initially added to bodhi
security_team = None

# Superuser groups
admin_groups = 'releng security_respons cvsadmin'

# Where do we send update announcements to ?
# These variables should be named per: Release.prefix_id.lower()_announce_list
fedora_announce_list = None
fedora_test_announce_list = None
fedora_epel_announce_list = None
fedora_epel_test_announce_list = None

##
## TurboMail settings
##
mail.on = False
mail.server = None
mail.debug = False
mail.encoding = 'utf-8-qp'

##
## Buildsystem settings
##

# What buildsystem do we want to use?  For development, we'll use a fake
# buildsystem that always does what we tell it to do.  For production, we'll
# want to use 'koji'.
buildsystem = 'dev'

# Where we can find packages by /name/version/release/arch/
build_dir = '%(top_level_dir)s/../packages'

# Koji's XML-RPC hub
koji_hub = 'https://koji.fedoraproject.org/kojihub'

# Koji certs
client_cert = None
clientca_cert = None
serverca_cert = None

##
## ACL system
## Choices are 'pkgdb', which will send a JSON query to the pkgdb_url below,
## or 'dummy', which will always return guest credentials (used for local
## development).
##
acl_system = 'dummy'

##
## Package DB
##
pkgdb_url = 'https://admin.fedoraproject.org/pkgdb'

##
## Bugzilla settings.  The username/password for our bugzilla account comes
## from the bodhi_{email,password} fields.
##
bz_server = 'https://bugzilla.redhat.com/xmlrpc.cgi'
bz_cookie = None

##
## Packages that should suggest a reboot
##
reboot_pkgs = "kernel kernel-smp kernel-xen-hypervisor kernel-PAE kernel-xen0 kernel-xenU kernel-xen kernel-xen-guest glibc hal dbus"

##
## Enable the TurboGears scheduler
##
tg.scheduler = True

##
## TGCaptcha widget settings
##
tgcaptcha.jpeg_generator = 'mcdermott'
tgcaptcha.key = 'Y`h`f&s}TZz'
#tgcaptcha.controller = '/updates/captcha'

# The commented out values below are the defaults

# VIEW

# which view (template engine) to use if one is not specified in the
# template name
# tg.defaultview = "kid"

# The following kid settings determine the settings used by the kid serializer.

# One of (html|xml|json)
# kid.outputformat="html"

# kid.encoding="utf-8"

# The sitetemplate is used for overall styling of a site that
# includes multiple TurboGears applications
# tg.sitetemplate="<packagename.templates.templatename>"

# Allow every exposed function to be called as json,
# tg.allow_json = False

# List of Widgets to include on every page.
#tg.include_widgets = ['turbogears.mochikit']

# Set to True if the scheduler should be started
# tg.scheduler = False

# VISIT TRACKING
# Each visit to your application will be assigned a unique visit ID tracked via
# a cookie sent to the visitor's browser.
# --------------

# Enable Visit tracking
visit.on=True

# Number of minutes a visit may be idle before it expires.
visit.timeout=720

# The name of the cookie to transmit to the visitor's browser.
# visit.cookie.name="tg-visit"

# Domain name to specify when setting the cookie (must begin with . according to
# RFC 2109). The default (None) should work for most cases and will default to
# the machine to which the request was made. NOTE: localhost is NEVER a valid
# value and will NOT WORK.
# visit.cookie.domain=None

# Specific path for the cookie
# visit.cookie.path="/"

#visit.cookie.secure=True

# The name of the VisitManager plugin to use for visitor tracking.
visit.manager="sqlobject"

# Database class to use for visit tracking
visit.soprovider.model = "bodhi.model.Visit"

# IDENTITY
# General configuration of the TurboGears Identity management module
# --------

# Switch to turn on or off the Identity management module
identity.on=True

# [REQUIRED] URL to which CherryPy will internally redirect when an access
# control check fails. If Identity management is turned on, a value for this
# option must be specified.
identity.failure_url="/login"

#identity.provider='bugzilla'

# The names of the fields on the login form containing the visitor's user ID
# and password. In addition, the submit button is specified simply so its
# existence may be stripped out prior to passing the form data to the target
# controller.
# identity.form.user_name="user_name"
# identity.form.password="password"
# identity.form.submit="login"

# What sources should the identity provider consider when determining the
# identity associated with a request? Comma separated list of identity sources.
# Valid sources: form, visit, http_auth
# identity.source="form,http_auth,visit"

# SqlObjectIdentityProvider
# Configuration options for the default IdentityProvider
# -------------------------

# The classes you wish to use for your Identity model. Remember to not use reserved
# SQL keywords for class names (at least unless you specify a different table
# name using sqlmeta).
identity.soprovider.model.user="bodhi.model.User"
identity.soprovider.model.group="bodhi.model.Group"
identity.soprovider.model.permission="bodhi.model.Permission"
identity.soprovider.model.visit="bodhi.model.VisitIdentity"

# The password encryption algorithm used when comparing passwords against what's
# stored in the database. Valid values are 'md5' or 'sha1'. If you do not
# specify an encryption algorithm, passwords are expected to be clear text.
# The SqlObjectProvider *will* encrypt passwords supplied as part of your login
# form.  If you set the password through the password property, like:
# my_user.password = 'secret'
# the password will be encrypted in the database, provided identity is up and 
# running, or you have loaded the configuration specifying what encryption to
# use (in situations where identity may not yet be running, like tests).

# identity.soprovider.encryption_algorithm=None

[/static]
static_filter.on = True
static_filter.dir = "%(top_level_dir)s/static"

[/favicon.ico]
static_filter.on = True
static_filter.file = "%(top_level_dir)s/static/images/favicon.ico"
