#
# bodhi - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory, 
# and generally should not be modified by end users. 

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

mail.utf8qp.on = True

#mail.manager = demand
#mail.demand.threads = 4
#mail.demand.divisor = 10
#mail.demand.timeout = 60
#mail.smtp.server (string, mandatory) host name or IP address of the SMTP server which will act as a relay for all mails
#mail.smtp.username (string)
#mail.smtp.password (string)
#mail.smtp.tls (boolean, default: None): Use TLS for the server connection (If ‘None’ is set TurboMail will attempt to auto-detect TLS which might if your server has a bad configuration)
#mail.smtp.debug (boolean, default: False): Print SMTP communication to STDERR
#mail.smtp.max_messages_per_connection (integer, default: 1): The number of messages that are sent over one connection. Increasing the number can help your performance if there is a high latency on connections to your mail server but you might find more (generally harmless) log messages about connections which timed out.


[server:main]
use = egg:Paste#http
host = 127.0.0.1 
port = 8080

[app:main]
use = egg:bodhi
full_stack = true
#lang = ru
cache_dir = %(here)s/data
beaker.session.key = bodhi
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# pick the form for your database
# %(here) may include a ':' character on Windows environments; this can
# invalidate the URI when specifying a SQLite db via path name
# sqlalchemy.url=postgres://username:password@hostname:port/databasename 
# sqlalchemy.url=mysql://username:password@hostname:port/databasename


# If you have sqlite, here's a simple default to get you started
# in development

sqlalchemy.url = sqlite:///%(here)s/devdata.db
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

# if you are using Mako and want to be able to reload
# the mako template from disk during the development phase
# you should say 'true' here
# This option is only used for mako templating engine
# WARNING: if you want to deploy your application using a zipped egg
# (ie: if your application's setup.py defines zip-safe=True, then you
# MUST put "false" for the production environment because there will
# be no disk and real files to compare time with.
# On the contrary if your application defines zip-safe=False and is
# deployed in an unzipped manner, then you can leave this option to true
templating.mako.reloadfromdisk = true

# the compiled template dir is a directory that must be readable by your
# webserver. It will be used to store the resulting templates once compiled
# by the TemplateLookup system.
# During development you generally don't need this option since paste's HTTP
# server will have access to you development directories, but in production
# you'll most certainly want to have apache or nginx to write in a directory
# that does not contain any source code in any form for obvious security reasons.
#
#templating.mako.compiled_templates_dir = /some/dir/where/webserver/has/access

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false


##
## Mash settings
##

# The masher is a bodhi instance that is responsible for composing the update
# repositories, regenerating metrics, sending update notices, closing bugs,
# and other costly operations.  To set an external masher, set the masher to
# the baseurl of the bodhi instance.  If set to None, this bodhi instance
# will act as a masher as well.
#masher = None

# Where to initially mash repositories
mashed_dir = %(here)s/../mashed

# Where to move the verified composed repos after they are mashed
mashed_stage_dir = %(here)s/../mash/updates

mash_conf = %(here)s/config/mash.conf

createrepo_cache_dir = /var/tmp/createrepo

## Our periodic jobs
#jobs = clean_repo nagmail fix_bug_titles cache_release_data
jobs = cache_release_data refresh_metrics

## Comps configuration
comps_dir = /usr/share/bodhi/comps
comps_cvs = :pserver:anonymous@cvs.fedora.redhat.com:/cvs/pkgs

##
## Mirror settings
##
file_url = http://download.fedoraproject.org/pub/fedora/linux/updates
master_repomd = http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386/repodata/repomd.xml
master_newkey_repomd = http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386.newkey/repodata/repomd.xml

fedora_master_repomd = http://download.fedora.redhat.com/pub/fedora/linux/updates/%d/i386/repodata/repomd.xml
fedora_epel_master_repomd = http://download.fedora.redhat.com/pub/epel/%d/i386/repodata/repomd.xml

## The base url of this application (should not include server.webpath)
base_address = http://localhost:8084

## Supported update types
update_types = bugfix enhancement security newpackage

## Supported architechures
arches = i386 x86_64 ppc

##
## Contact setting
##

# The updates system itself.  This email address is used in fetching Bugzilla
# information, as well as email notifications
bodhi_email = None
bodhi_password=None

# The address that gets the requests
release_team_address = None

# The address to notify when security updates are initially added to bodhi
security_team = None

# Superuser groups
admin_groups = releng security_respons cvsadmin

# Where do we send update announcements to ?
# These variables should be named per: Release.prefix_id.lower()_announce_list
fedora_announce_list = None
fedora_test_announce_list = None
fedora_epel_announce_list = None
fedora_epel_test_announce_list = None

##
## TurboMail settings
##
mail.on = False
mail.server = None
mail.debug = False
mail.encoding = utf-8-qp

##
## Buildsystem settings
##

# What buildsystem do we want to use?  For development, we'll use a fake
# buildsystem that always does what we tell it to do.  For production, we'll
# want to use 'koji'.
buildsystem = dev

# Where we can find packages by /name/version/release/arch/
build_dir = %(here)s/../packages

# Koji's XML-RPC hub
koji_hub = https://koji.fedoraproject.org/kojihub

# Koji certs
#client_cert = None
#clientca_cert = None
#serverca_cert = None

##
## ACL system
## Choices are 'pkgdb', which will send a JSON query to the pkgdb_url below,
## or 'dummy', which will always return guest credentials (used for local
## development).
##
acl_system = dummy

##
## Package DB
##
pkgdb_url = https://admin.fedoraproject.org/pkgdb

##
## Bugzilla settings.  The username/password for our bugzilla account comes
## from the bodhi_{email,password} fields.
##
bz_server = https://bugzilla.redhat.com/xmlrpc.cgi
bz_cookie = None

##
## Packages that should suggest a reboot
##
reboot_pkgs = kernel kernel-smp kernel-xen-hypervisor kernel-PAE kernel-xen0 kernel-xenU kernel-xen kernel-xen-guest glibc hal dbus


# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, bodhi, sqlalchemy, auth

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_bodhi]
level = DEBUG
handlers =
qualname = bodhi

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)


# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = WARN
handlers = 
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
